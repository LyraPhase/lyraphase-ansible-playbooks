---
# opkg-edison: Tasks entry point. Called by main.yml

# Load a variable file based on the OS type, or a default if not found.
- name: Include OS-specific vars
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int }}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/default.yml"
  when: openwrt_opkg_repo_files is not defined

- name: Check for python interpreter
  check_mode: false
  changed_when: false
  ansible.builtin.raw: opkg status python-light
  register: python_light_installed

- name: Check for python-logging
  check_mode: false
  changed_when: false
  ansible.builtin.raw: opkg status python-logging
  register: python_logging_installed

- name: Check for python-openssl
  check_mode: false
  changed_when: false
  ansible.builtin.raw: opkg status python-openssl
  register: python_openssl_installed

- name: Check for python-codecs
  check_mode: false
  changed_when: false
  ansible.builtin.raw: opkg status python-codecs
  register: python_codecs_installed

- name: Check for openssh-sftp-server
  check_mode: false
  changed_when: false
  ansible.builtin.raw: opkg status openssh-sftp-server
  register: openssh_server_installed

# Bootstrap python interpreter for Ansible
- name: Raw update opkg cache
  ansible.builtin.raw: echo 'Triggering RAW opkg update'
  when: >
    not python_light_installed.stdout is search("Status: install (ok|user) installed")
    or not python_logging_installed.stdout is search("Status: install (ok|user) installed")
    or not python_openssl_installed.stdout is search("Status: install (ok|user) installed")
    or not python_codecs_installed.stdout is search("Status: install (ok|user) installed")
    or not openssh_server_installed.stdout is search("Status: install (ok|user) installed")
  changed_when: false
  notify:
    - RAW destroy opkg cache
    - RAW create opkg cache dir
    - RAW opkg update

# Run yum makecache handlers immediately
# (Should fix Ansible runs on hosts with pre-existing opkg repo problems)
- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  check_mode: false

- name: Install python interpreter
  ansible.builtin.raw: opkg install python-light
  when: >
    not python_light_installed.stdout is search("Status: install (ok|user) installed")
  register: opkg_install_python_light
  changed_when: opkg_install_python_light.rc == 0

- name: Install python-logging
  ansible.builtin.raw: opkg install python-logging
  when: >
    not python_logging_installed.stdout is search("Status: install (ok|user) installed")
  register: opkg_install_python_logging
  changed_when: opkg_install_python_logging.rc == 0

- name: Install python-openssl
  ansible.builtin.raw: opkg install python-openssl
  when: >
    not python_openssl_installed.stdout is search("Status: install (ok|user) installed")
  register: opkg_install_python_openssl
  changed_when: opkg_install_python_openssl.rc == 0

- name: Install python-codecs
  ansible.builtin.raw: opkg install python-codecs
  when: >
    not python_codecs_installed.stdout is search("Status: install (ok|user) installed")
  register: opkg_install_python_codecs
  changed_when: opkg_install_python_codecs.rc == 0

- name: Install openssh-sftp-server
  ansible.builtin.raw: opkg install openssh-sftp-server
  when: >
    not openssh_server_installed.stdout is search("Status: install (ok|user) installed")
  register: opkg_install_openssh_sftp_server
  changed_when: opkg_install_openssh_sftp_server.rc == 0
