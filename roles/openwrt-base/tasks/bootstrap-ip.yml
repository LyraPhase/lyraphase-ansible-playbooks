---
# openwrt-base: bootstrap-ip Tasks entry point. Called by main.yml

- name: Check for current OpenWRT IP
  check_mode: false
  changed_when: false
  ansible.builtin.raw: uci get network.lan.ipaddr | cut -f1
  register: openwrt_ipaddr
  when: >
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy
  tags: openwrt_ip_check

- name: Check for current OpenWRT netmask
  check_mode: false
  changed_when: false
  ansible.builtin.raw: uci get network.lan.netmask | cut -f1
  register: openwrt_netmask
  when: >
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy
  tags: openwrt_netmask_check

- name: Check for current OpenWRT DHCP proto
  check_mode: false
  changed_when: false
  ansible.builtin.raw: uci get network.lan.proto | cut -f1
  register: openwrt_dhcp_proto
  when: >
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy
  tags: openwrt_dhcp_check

- name: UCI - Set bootstrap IP
  ansible.builtin.raw: "uci set network.lan.ipaddr={{ openwrt_base_bootstrap_ip }}"
  when: >
    (openwrt_ipaddr.stdout_lines[0] | trim) != openwrt_base_bootstrap_ip and
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy
  register: uci_set_ipaddr
  changed_when: uci_set_ipaddr.rc == 0
  notify:
    - RAW uci commit
    - RAW network restart

- name: UCI - Set bootstrap netmask
  ansible.builtin.raw: "uci set network.lan.netmask={{ openwrt_base_bootstrap_netmask }}"
  when: >
    openwrt_netmask.stdout_lines[0] != openwrt_base_bootstrap_netmask and
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy
  register: uci_set_netmask
  changed_when: uci_set_netmask.rc == 0
  notify:
    - RAW uci commit
    - RAW network restart

- name: UCI - Set bootstrap DHCP proto
  ansible.builtin.raw: "uci set network.lan.proto={{ openwrt_base_bootstrap_dhcp_proto }}"
  when: >
    openwrt_dhcp_proto.stdout_lines[0] != openwrt_base_bootstrap_dhcp_proto and
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy
  register: uci_set_dhcp_proto
  changed_when: uci_set_dhcp_proto.rc == 0
  notify:
    - RAW uci commit
    - RAW network restart

# Run uci commit handlers immediately
# (Should fix initial Ansible run on factory OpenWrt image)
- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  check_mode: false

- name: Wait for host to come up on new IP + netmask
  ansible.builtin.wait_for:
    host: "{{ openwrt_base_bootstrap_ip }}"
    port: 22
    timeout: 300
  delegate_to: localhost
  when: >
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy and
    (ansible_host != openwrt_base_bootstrap_ip or
    uci_set_ipaddr.changed or
    uci_set_netmask.changed or
    uci_set_dhcp_proto.changed)

- name: Set ansible_host for new IP
  ansible.builtin.set_fact:
    ansible_host: "{{ openwrt_base_bootstrap_ip }}"
  when: >
    ansible_bootstrap is defined and
    ansible_bootstrap is truthy and
    uci_set_ipaddr.changed

- name: Reset connection for subsequent tasks
  ansible.builtin.meta: reset_connection
