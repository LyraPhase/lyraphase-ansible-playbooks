import subprocess
import os
import platform
import re
from net_detect import net_detect

HOST_VARS = {}
ANSIBLE_INV = {}
rpi_ip_list = []
rpi_name_list = []

def get_host_network_ip():
	print([l for l in ([ip for ip in socket.gethostbyname_ex(socket.gethostname())[2] if not ip.startswith("127.")][:1], [[(s.connect(('8.8.8.8', 53)), s.getsockname()[0], s.close()) for s in [socket.socket(socket.AF_INET, socket.SOCK_DGRAM)]][0][1]]) if l][0][0])

def nmap(scan_this):
	t = subprocess.Popen("nmap -sP %s" % scan_this,shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
	t.wait()
	for line in t.stdout.readlines():
		print(line)

def pi_search():
	#print('Searching for RPi')
	#print("---------------------------")
	p = subprocess.Popen("arp -a | cut -f 2,4 -d ' ' ", shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
	for line in p.stdout.readlines():
		if str(line[-18:]).startswith('b8:27:eb'):#eth0 mac : b8:27:eb
			ip_is = str(re.findall( r'[0-9]+(?:\.[0-9]+){3}',line))[2:-2]
			rpi_ip_list.append(ip_is)
			#print("This is RPi IP: " + ip_is)
	#print("---------------------------")
def var_gen_host():
	for i in range(len(rpi_ip_list)):
		rpi_name_list.append("rpi"+str(i))
		HOST_VARS[rpi_name_list[i]] = {}
		for k in range(len(rpi_name_list)):
			HOST_VARS[rpi_name_list[i]]['ansible_ssh_host']=rpi_ip_list[k]

	return (HOST_VARS)

def var_gen_inv():
	ANSIBLE_INV ["rpi"]={}
	ANSIBLE_INV ["rpi"]["hosts"]=rpi_name_list
	ANSIBLE_INV ["rpi"]["vars"] = {
	            "ansible_ssh_user": "root",
	            "ansible_ssh_private_key_file":"~/.ssh/dd_wrt"
				}
	return (ANSIBLE_INV)


def var_gen():
	var_gen_host()
	var_gen_inv()


def run():
	pi_search()

	if rpi_ip_list == []:
		ip = net_detect.get_local_addr()
		if net_detect.ip_is_private(ip):
			cidr = net_detect.ip_private_cidr(ip)
		#print("%s %s\n" % (ip, cidr))
		nmap("%s" % cidr)
		pi_search()

def main():
	pi_search()

	if rpi_ip_list == []:
		ip = net_detect.get_local_addr()
		if ip_is_private(ip):
			cidr = net_detect.ip_private_cidr(ip)
		print('Runing nmap')
		print("%s/%s" % (ip, cidr))
		nmap("%s/%s" % (ip, cidr))
		pi_search()

	var_gen()
	print("HOST_VARS")
	print(HOST_VARS)
	print("ANSIBLE_INV")
	print(ANSIBLE_INV)
	#return (HOST_VARS,ANSIBLE_INV)


if __name__ == "__main__":
    main()
